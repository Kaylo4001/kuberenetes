1)  sudo apt-get update
2)  sudo apt-get install -y apt-transport-https ca-certificates curl
3)  sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
4)  echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
5)  sudo apt-get update
6)  sudo apt-get install -y kubelet kubeadm kubectl kubernetes-cni
7)  sudo apt-mark hold kubelet kubeadm kubectl
8)  sudo swapoff -a
9)  sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
10) sudo modprobe overlay
11) sudo modprobe br_netfilter
12) cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
    overlay
    br_netfilter
    EOF
13) cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    EOF
14) sudo sysctl --system
15) sudo sed -i 's/            SystemdCgroup = false/            SystemdCgroup = true/' /etc/containerd/config.toml
16) sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates
17) curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
18) sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
19) sudo apt update
20) sudo apt-get install containerd.io -y
21) sudo su -
22) mkdir -p /etc/containerd
23) containerd config default>/etc/containerd/config.toml
24) exit
25) sudo systemctl restart containerd
26) sudo systemctl enable containerd
27) sudo kubeadm config images pull
------------ only on master nodes ------------
28) sudo kubeadm init --pod-network-cidr=10.244.0.0/16
29) mkdir -p $HOME/.kube
30) sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
31) sudo chown $(id -u):$(id -g) $HOME/.kube/config
32) kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/v0.20.2/Documentation/kube-flannel.yml

-----------------------------------------------------------------------------------------------------------------------------------------

usefull commands:
echo "nameserver 178.22.122.100 nameserver 185.51.200.2" > /etc/resolv.conf
kubeadm token create --print-join-command
sudo kubeadm reset
rm -rf $HOME/.kube/config
kubeadm token list
kubeadm token --help
kubeadm token create --help
kubeadm join 192.168.146.145:6443 --token xu8wrt.5qsf0dgrz3oti78x --discovery-token-ca-cert-hash sha256:0f7d6baec8d0038c4c4eb407c0361dc29b7fbc03f263aff8ab3c6e0523183b901
sudo apt-get install -y kubernetes-cni
